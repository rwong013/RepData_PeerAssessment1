class(y_test[1])
y_test[1]
if(y_test[1] == 5){ y_test[1] <- "STANDING"}
y_test[1]
y_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/y_test.txt", colClasses = "factor")
y_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/y_train.txt", colClasses = "factor")
y <- rbind(y_test, y_train)
y <- rename(y, activities = V1)
for(i in 1:(nrow(y))){
if(y[i] == 1){ y[i] <- "WALKING"
} elseif( y[i] == 2){
y[i] <- "WALKING_UPSTAIRS"
} elseif( y[i] == 3) {
y[i] <- "WALKING_DOWNSTAIRS"
} elseif( y[i] == 4) {
y[i] <- "SITTING"
} elseif( y[i] == 5) {
y[i] <- "STANDING"
} elseif( y[i] == 6) {
y[i] <- "LAYING"}
}
for(i in 1:(nrow(y))){
if(y[i] == 1){ y[i] <- "WALKING"
elseif( y[i] == 2){
y[i] <- "WALKING_UPSTAIRS"
?for
for(i in 1:(nrow(y))) {
if(y[i] == 1){ y[i] <- "WALKING"
} elseif( y[i] == 2){
y[i] <- "WALKING_UPSTAIRS"
} elseif( y[i] == 3) {
y[i] <- "WALKING_DOWNSTAIRS"
} elseif( y[i] == 4) {
y[i] <- "SITTING"
} elseif( y[i] == 5) {
y[i] <- "STANDING"
} elseif( y[i] == 6) {
y[i] <- "LAYING"}
}
y[1] == 5
for(i in 1:(nrow(y))) {
if(y[i] == 1){ y[i] <- "WALKING"
}# elseif( y[i] == 2){
#    y[i] <- "WALKING_UPSTAIRS"
#  } elseif( y[i] == 3) {
#      y[i] <- "WALKING_DOWNSTAIRS"
#  } elseif( y[i] == 4) {
#    y[i] <- "SITTING"
#  } elseif( y[i] == 5) {
#    y[i] <- "STANDING"
#  } elseif( y[i] == 6) {
#      y[i] <- "LAYING"}
}
for(i in 1:(nrow(y))) {
if(y[i] == 1){ y[i] <- "WALKING"
} else if( y[i] == 2){
y[i] <- "WALKING_UPSTAIRS"
} else if( y[i] == 3) {
y[i] <- "WALKING_DOWNSTAIRS"
} else if( y[i] == 4) {
y[i] <- "SITTING"
} else if( y[i] == 5) {
y[i] <- "STANDING"
} else if( y[i] == 6) {
y[i] <- "LAYING"}
}
head(y)
for(i in 1:(nrow(y))) {
if(y[i] == 1){ y[i] <- "WALKING"
} else if( y[i] == 2){
y[i] <- "WALKING_UPSTAIRS"
} else if( y[i] == 3) {
y[i] <- "WALKING_DOWNSTAIRS"
} else if( y[i] == 4) {
y[i] <- "SITTING"
} else if( y[i] == 5) {
y[i] <- "STANDING"
} else if( y[i] == 6) {
y[i] <- "LAYING"}
else { return }
}
rm(list=ls())
#Download data set. Extract the file using 3rd party program, not in the script
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", "C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/run_analysis.zip")
subject_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/subject_test.txt")
subject_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/subject_train.txt")
subject <- rbind(subject_test, subject_train)
subject <- rename(subject, subjectID = V1)
head(subject)
y_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/y_test.txt", colClasses = "factor")
y_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/y_train.txt", colClasses = "factor")
y <- rbind(y_test, y_train)
y <- rename(y, activities = V1)
for(i in 1:(nrow(y))) {
if(y[i] == 1){ y[i] <- "WALKING"
} else if( y[i] == 2){
y[i] <- "WALKING_UPSTAIRS"
} else if( y[i] == 3) {
y[i] <- "WALKING_DOWNSTAIRS"
} else if( y[i] == 4) {
y[i] <- "SITTING"
} else if( y[i] == 5) {
y[i] <- "STANDING"
} else if( y[i] == 6) {
y[i] <- "LAYING"}
else { }
}
head(y)
unique(y)
View(y)
nrow(y)
for(i in 1:(nrow(y))) {
if(y[i] == 1){ y[i] <- "WALKING"
} else if( y[i] == 2){
y[i] <- "WALKING_UPSTAIRS"
} else if( y[i] == 3) {
y[i] <- "WALKING_DOWNSTAIRS"
} else if( y[i] == 4) {
y[i] <- "SITTING"
} else if( y[i] == 5) {
y[i] <- "STANDING"
} else if( y[i] == 6) {
y[i] <- "LAYING"}
else { }
}
unique(y)
#Read test inertial signals
bodyacc_x_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt")
bodyacc_y_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/Inertial Signals/body_acc_y_test.txt")
bodyacc_z_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/Inertial Signals/body_acc_z_test.txt")
bodygyro_x_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/Inertial Signals/body_gyro_x_test.txt")
bodygyro_y_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/Inertial Signals/body_gyro_y_test.txt")
bodygyro_z_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/Inertial Signals/body_gyro_z_test.txt")
totalacc_x_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/Inertial Signals/total_acc_x_test.txt")
totalacc_y_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/Inertial Signals/total_acc_y_test.txt")
totalacc_z_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/Inertial Signals/total_acc_z_test.txt")
#Read training inertial signals
bodyacc_x_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/Inertial Signals/body_acc_x_train.txt")
bodyacc_y_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/Inertial Signals/body_acc_y_train.txt")
bodyacc_z_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/Inertial Signals/body_acc_z_train.txt")
bodygyro_x_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/Inertial Signals/body_gyro_x_train.txt")
bodygyro_y_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/Inertial Signals/body_gyro_y_train.txt")
bodygyro_z_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/Inertial Signals/body_gyro_z_train.txt")
totalacc_x_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/Inertial Signals/total_acc_x_train.txt")
totalacc_y_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/Inertial Signals/total_acc_y_train.txt")
totalacc_z_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/Inertial Signals/total_acc_z_train.txt")
#Combine the test and train data sets into one set.
bodyacc_x <- rbind(bodyacc_x_test, bodyacc_x_train)
bodyacc_y <- rbind(bodyacc_y_test, bodyacc_y_train)
bodyacc_z <- rbind(bodyacc_z_test, bodyacc_z_train)
bodygyro_x <- rbind(bodygyro_x_test, bodygyro_x_train)
bodygyro_y <- rbind(bodygyro_y_test, bodygyro_y_train)
bodygyro_z <- rbind(bodygyro_z_test, bodygyro_z_train)
totalacc_x <- rbind(totalacc_x_test, totalacc_x_train)
totalacc_y <- rbind(totalacc_y_test, totalacc_y_train)
totalacc_z <- rbind(totalacc_z_test, totalacc_z_train)
bodyacc_x_mean <- rowMeans(bodyacc_x)
bodyacc_x_stddev <- apply(bodyacc_x, 1, sd)
bodyacc_y_mean <- rowMeans(bodyacc_y)
bodyacc_y_stddev <- apply(bodyacc_y, 1, sd)
bodyacc_z_mean <- rowMeans(bodyacc_z)
bodyacc_z_stddev <- apply(bodyacc_z, 1, sd)
bodygyro_x_mean <- rowMeans(bodygyro_x)
bodygyro_x_stddev <- apply(bodygyro_x, 1, sd)
bodygyro_y_mean <- rowMeans(bodygyro_y)
bodygyro_y_stddev <- apply(bodygyro_y, 1, sd)
bodygyro_z_mean <- rowMeans(bodygyro_z)
bodygyro_z_stddev <- apply(bodygyro_z, 1, sd)
totalacc_x_mean <- rowMeans(totalacc_x)
totalacc_x_stddev <- apply(totalacc_x, 1, sd)
totalacc_y_mean <- rowMeans(totalacc_y)
totalacc_y_stddev <- apply(totalacc_y, 1, sd)
totalacc_z_mean <- rowMeans(totalacc_z)
totalacc_z_stddev <- apply(totalacc_z, 1, sd)
testedsubjects <- cbind(subject, y,
bodyacc_x_mean, bodyacc_x_stddev, bodyacc_y_mean, bodyacc_y_stddev, bodyacc_z_mean, bodyacc_z_stddev,
bodygyro_x_mean, bodygyro_x_stddev, bodygyro_y_mean, bodygyro_y_stddev, bodygyro_z_mean, bodygyro_z_stddev,
totalacc_x_mean, totalacc_x_stddev, totalacc_y_mean, totalacc_y_stddev, totalacc_z_mean, totalacc_z_stddev)
testedsubjects %>% group_by(subjectID,activities) %>% summarize(bodyacc_x_mean = mean(bodyacc_x_mean, na.rm = TRUE),
bodyacc_y_mean = mean(bodyacc_y_mean, na.rm = TRUE),
bodyacc_z_mean = mean(bodyacc_z_mean, na.rm = TRUE),
bodygyro_x_mean = mean(bodygyro_x_mean, na.rm = TRUE),
bodygyro_y_mean = mean(bodygyro_y_mean, na.rm = TRUE),
bodygyro_z_mean = mean(bodygyro_z_mean, na.rm = TRUE),
totalacc_x_mean = mean(totalacc_x_mean, na.rm = TRUE),
totalacc_y_mean = mean(totalacc_y_mean, na.rm = TRUE),
totalacc_z_mean = mean(totalacc_z_mean, na.rm = TRUE))
summarytestsub <- testedsubjects %>% group_by(subjectID,activities) %>% summarize(bodyacc_x_mean = mean(bodyacc_x_mean, na.rm = TRUE),
bodyacc_y_mean = mean(bodyacc_y_mean, na.rm = TRUE),
bodyacc_z_mean = mean(bodyacc_z_mean, na.rm = TRUE),
bodygyro_x_mean = mean(bodygyro_x_mean, na.rm = TRUE),
bodygyro_y_mean = mean(bodygyro_y_mean, na.rm = TRUE),
bodygyro_z_mean = mean(bodygyro_z_mean, na.rm = TRUE),
totalacc_x_mean = mean(totalacc_x_mean, na.rm = TRUE),
totalacc_y_mean = mean(totalacc_y_mean, na.rm = TRUE),
totalacc_z_mean = mean(totalacc_z_mean, na.rm = TRUE))
?write.table
write.table(summarytestsub, "C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/run_analysis.txt")
write.table(summarytestsub, "C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/run_analysis.txt", row.names = FALSE)
?gropu_by
?group_by
?order
?arrange
summarytestsub <- testedsubjects %>% arrange(subjectID, activities) %>% group_by(subjectID,activities) %>% summarize(bodyacc_x_mean = mean(bodyacc_x_mean, na.rm = TRUE),
bodyacc_y_mean = mean(bodyacc_y_mean, na.rm = TRUE),
bodyacc_z_mean = mean(bodyacc_z_mean, na.rm = TRUE),
bodygyro_x_mean = mean(bodygyro_x_mean, na.rm = TRUE),
bodygyro_y_mean = mean(bodygyro_y_mean, na.rm = TRUE),
bodygyro_z_mean = mean(bodygyro_z_mean, na.rm = TRUE),
totalacc_x_mean = mean(totalacc_x_mean, na.rm = TRUE),
totalacc_y_mean = mean(totalacc_y_mean, na.rm = TRUE),
totalacc_z_mean = mean(totalacc_z_mean, na.rm = TRUE))
write.table(summarytestsub, "C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/run_analysis.txt", row.names = FALSE)
names(testedsubjects)
x_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/X_test.txt")
head(x_test)
rm(list=ls())
#read training data
x_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/X_test.txt")
x_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/X_train.txt")
x <- rbind(x_test, x_train)
x[1,]
x[,c(1:6)]
x[,c(1,6)]
x <- data.frame(x)
x[,c(1,6)]
head(x[,c(1:6)])
head(x[,c(1:6, 41:46, 81:86, 121:126, 161:166, 201:202, 227:228, 240:241, 253:254, 266:271, 345:350, 424:429, 503:504, 516:517, 529,530, 542:543)])
x <- data.table(x)
?rename
head(x)
x <- x[,c(1:6, 41:46, 81:86, 121:126, 161:166, 201:202, 227:228, 240:241, 253:254, 266:271, 345:350, 424:429, 503:504, 516:517, 529,530, 542:543)]
x <- rbind(x_test, x_train)
#convert data.table to data.frame to subset columns
x <- data.frame(x)
x <- x[,c(1:6, 41:46, 81:86, 121:126, 161:166, 201:202, 227:228, 240:241, 253:254, 266:271, 345:350, 424:429, 503:504, 516:517, 529,530, 542:543)]
?select
?grep
x <- rbind(x_test, x_train)
names <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/features.txt")
?rename
library(dplyr)
?rename
?name
rm(names)
?names
colnames <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/features.txt")
rename(x, colnames[1] = names(x[,1]))
x <- rename(x, colnames[1] = names(x[,1]))
colnames[1]
colnames[1,1]
colnames[1,2]
x <- rename(x, colnames[1,2] = names(x[,1]))
?rename
names(x[,1])
names(x[1,])
names(x[1,1])
names(x[,1])
names[1](x)
names(x)[1]
x <- rename(x, colnames[1,2] = names(x)[1])
head(x)
?fread
colnames <- colnames[,2]
colnames <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/features.txt", select = "V2")
head(colnames)
rm(list=ls())
colnames <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/features.txt", select = "V2")
x_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/X_test.txt", col.names = colnames)
x_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/X_train.txt", col.names = colnames)
x <- rbind(x_test, x_train)
colnames <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/features.txt", select = "V2", colClasses = character)
colnames <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/features.txt", select = "V2", colClasses = "character")
x_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/X_test.txt", col.names = colnames)
class(colnames)
class(colnames[1])
as.vector(colnames)
x_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/X_test.txt", col.names = as.vector(colnames))
?as.vector
x_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/X_test.txt", col.names = as.vector(colnames, mode = "character"))
colnames
coltest <- as.vector(colnames)
class(coltest)
coltest <- as.vector(colnames, mode="character")
head(coltest)
coltest <- data.frame(colnames)
coltest <- as.vector(coltest, mode = "character")
head(colnames)
coltest <- colnames
coltest <- data.frame(coltest)
head(coltest)
as.vector(coltest)
coltest2 <- as.vector(coltest)
coltest2 <- as.vector(coltest, mode = "character")
?read.table
x_test <- read.table("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/X_test.txt", col.names = colnames)
?t
x_test <- read.table("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/X_test.txt", col.names = t(colnames))
head(x_test)
x_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/X_test.txt", col.names = t(colnames))
head(x_test)
rm(list=ls())
?grep
?select
?grep
colnames <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/features.txt", select = "V2", colClasses = character)
x_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/X_test.txt", col.names = t(colnames))
x_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/X_train.txt", col.names = t(colnames))
x <- rbind(x_test, x_train)
colnames <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/features.txt", select = "V2")
x_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/X_test.txt", col.names = t(colnames))
x_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/X_train.txt", col.names = t(colnames))
x <- rbind(x_test, x_train)
head(x)
grep("mean()", names(x))
?select
grep("mean()" | "std()", names(x))
grep(c("mean()", "std()"), names(x))
c(grep("mean()", names(x)), grep("std()", names(x)))
order(c(grep("mean()", names(x)), grep("std()", names(x))))
order(as.numeric(c(grep("mean()", names(x)), grep("std()", names(x)))))
?arrange
arange(as.numeric(c(grep("mean()", names(x)), grep("std()", names(x)))))
sort(c(grep("mean()", names(x)), grep("std()", names(x))))
?select
head(select(x, sort(c(grep("mean()", names(x)), grep("std()", names(x))))))
grep
?grep
grep("mean()", names(x))
grep("mean()", names(x), fixed = TRUE)
head(select(x, sort(c(grep("mean()", names(x), fixed = TRUE), grep("std()", names(x), fixed = TRUE)))))
select(x, sort(c(grep("mean()", names(x), fixed = TRUE), grep("std()", names(x), fixed = TRUE))))
x_sub <- select(x, sort(c(grep("mean()", names(x), fixed = TRUE), grep("std()", names(x), fixed = TRUE))))
summarize(x_sub)
summarize(x_sub, names(x_sub))
?summarize
summarize(x_sub, names(x_sub) = mean())
?melt
#Reads and combines test and training data sets. Gives columns descriptive names
#lists who the subject taking the test
subject_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/subject_test.txt")
subject_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/subject_train.txt")
subject <- rbind(subject_test, subject_train)
subject <- rename(subject, subjectID = V1)
#training labels
y_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/y_test.txt", colClasses = "factor")
y_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/y_train.txt", colClasses = "factor")
y <- rbind(y_test, y_train)
y <- rename(y, activities = V1)
#Give the activities label meaningful names, instead of 1-6 numbers.
for(i in 1:(nrow(y))) {
if(y[i] == 1){ y[i] <- "WALKING"
} else if( y[i] == 2){
y[i] <- "WALKING_UPSTAIRS"
} else if( y[i] == 3) {
y[i] <- "WALKING_DOWNSTAIRS"
} else if( y[i] == 4) {
y[i] <- "SITTING"
} else if( y[i] == 5) {
y[i] <- "STANDING"
} else if( y[i] == 6) {
y[i] <- "LAYING"}
else { }
}
#read training data
#read text file with column names
colnames <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/features.txt", select = "V2")
x_test <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/test/X_test.txt", col.names = t(colnames))
x_train <- fread("C:/Users/rwong/Documents/DSS/GettingCleaningData/RunAnalysis/UCI HAR Dataset/train/X_train.txt", col.names = t(colnames))
x <- rbind(x_test, x_train)
x_sub <- select(x, sort(c(grep("mean()", names(x), fixed = TRUE), grep("std()", names(x), fixed = TRUE))))
cbind(subject,y,x_sub)
activitysub <- cbind(subject,y,x_sub)
activitymelt <- melt(activitysub, c(subjectID, activities))
activitymelt <- melt(activitysub, c("subjectID", "activities"))
head(activitymelt)
?dcast
dcast(activitymelt, subject,activities ~ variable)
dcast(activitymelt, subject + activities ~ variable)
dcast(activitymelt, . ~ variable)
dcast(activitymelt, c(subjectID, activities) ~ variable)
dcast(activitymelt, subjectID ~ variable)
dcast(activitymelt, subjectID ~ variable,mean)
dcast(activitymelt, c(subjectID,activities) ~ variable,mean)
?summarize_each
summarize_each(activitysub, mean, -c(subject, activities))
summarize_each(activitysub, mean
)
summarize_each(activitysub, mean()
)
?summarize_each_
summarize_each(activitysub, mean(), names(activitysub)[3:ncols(activitysub)]
)
summarize_each(activitysub, mean, names(activitysub)[3:ncols(activitysub)]
)
head(activitymelt)
dcast.data.table(activitymelt, subjectID + activities ~ variable)
dcast.data.table(activitymelt, subjectID + activities ~ variable,mean)
activitysum <- dcast.data.table(activitymelt, subjectID + activities ~ variable,mean)
?write.table
write.table(activitysum, file = "~/DSS/GettingCleaningData/RunAnalysis/RunAnalysis/activitysummary.txt")
write.table(activitysum, file = "~/DSS/GettingCleaningData/RunAnalysis/RunAnalysis/activitysummary.txt", row.names = FALSE)
?melt
names(activitysum)
View(activitysum)
rm(list=ls())
SourceClassCode <- readRDS("~/DSS/ExploratoryDataAnalysis/Proj2/Source_Classification_Code.rds")
PM25 <- readRDS("~/DSS/ExploratoryDataAnalysis/Proj2/summarySCC_PM25.rds")
PM25merge <- merge(PM25, SourceClassCode, by = "SCC", all.x = TRUE)
SourceClassCode[grep("Coal", SourceClassCode$SCC.Level.Three) & SourceClassCode$SCC.Level.Three != "Coal Bed Methane Natural Gas",]
?filter
library(dplyr)
?grep
grep("Coal", PM25merge$SCC.Level.Three) & !(grep("Coal Bed Methane Natural Gas", PM25merge$SCC.Level.Three)
)
PM25coal <- PM25merge[grep("Coal", PM25merge$SCC.Level.Three)]
PM25coal <- PM25merge[grep("Coal", PM25merge$SCC.Level.Three),]
PM25coal <- PM25coal[PM25coal$SCC.Leve.Three!= "Coal Bed Methane Natural Gas",]
PM25coal <- PM25merge[grep("Coal", PM25merge$SCC.Level.Three),]
PM25coal[PM25coal$SCC.Leve.Three!= "Coal Bed Methane Natural Gas"]
PM25coal[,PM25coal$SCC.Leve.Three!= "Coal Bed Methane Natural Gas"]
PM25coal[,PM25coal$SCC.Level.Three!= "Coal Bed Methane Natural Gas"]
PM25coal[PM25coal$SCC.Level.Three!= "Coal Bed Methane Natural Gas"]
PM25coal[PM25coal$SCC.Level.Three != "Coal Bed Methane Natural Gas",]
head(PM25coal$SCC.Level.Three != "Coal Bed Methane Natural Gas")
unique(PM25coal$SCC.Level.Three != "Coal Bed Methane Natural Gas")
unique(PM25coal$SCC.Level.Three)
unique(PM25coal$SCC.Level.Two)
unique(PM25coal$SCC.Level.Four)
unique(PM25coal$SCC.Level.One)
unique(PM25coal$SCC.Level.Three)
PM25balt <- PM25[PM25$fips=="24510",] %>% group_by(type, year) %>% summarize_each(funs(sum), Emissions)
?ggplot
library(ggplot2)
?ggplot2
ggplot2(PM25balt, aes(year, Emissions))
ggplot(PM25balt, aes(year, Emissions))
baltplot <- ggplot(PM25balt, aes(year, Emissions))
baltplot + geom_line()
PM25balt
baltplot + geom_line() + facet_grid( . ~ type)
baltplot + geom_line() + facet_grid( . ~ type) + ggtitle("Emissions by typ for Baltimore City, MD")
png(file = 'C:/Users/rwong/Documents/DSS/ExploratoryDataAnalysis/Proj2/plot3.png')
baltplot <- ggplot(PM25balt, aes(year, Emissions))
baltplot + geom_line() + facet_grid( . ~ type) + ggtitle("Emissions by type for Baltimore City, MD")
dev.off()
PM25coal <- PM25merge[grep("Coal", PM25merge$SCC.Level.Three),]  %>%
group_by(year) %>% summarize_each(funs(sum), Emissions)
PM25merge[grep("Coal", PM25merge$SCC.Level.Three),]
head(PM25merge[grep("Coal", PM25merge$SCC.Level.Three),])
unique(PM25merge$SCC.Level.Two[grep("Coal", PM25merge$SCC.Level.Three),])
PM25coal <- PM25merge[grep("Coal", PM25merge$SCC.Level.Three),]
unique(PM25coal$SCC.Level.Two)
unique(PM25coal$SCC.Level.Three)
unique(PM25coal$SCC.Level.Four)
PM25coal <- PM25merge[grep("Coal", PM25merge$SCC.Level.Three),]  %>%
group_by(year) %>% summarize_each(funs(sum), Emissions)
coalplot <- ggplot(PM25coal, aes(year, Emissions))
coalplot + geom_line() + ggtitle("Emissions from coal")
png(file = 'C:/Users/rwong/Documents/DSS/ExploratoryDataAnalysis/Proj2/plot4.png')
coalplot <- ggplot(PM25coal, aes(year, Emissions))
coalplot + geom_line() + ggtitle("Emissions from coal")
dev.off()
rm(baltplot)
PM25balt <- PM25[PM25$fips=="24510",]
unique(SourceClassCode$SCC.Level.One)
unique(SourceClassCode$SCC.Level.Two)
SourceClassCode$SCC.Level.Two[SourceClassCode$SCC.Level.Two == "Vehicle"]
SourceClassCode$SCC.Level.Two[grep("Vehicle",SourceClassCode$SCC.Level.Two)]
unique(SourceClassCode$SCC.Level.Two[grep("Vehicle",SourceClassCode$SCC.Level.Two)])
PM25balt <- PM25merge[PM25merge$fips=="24510",]
PM25balt <- PM25balt[grep("Vehicle", PM25balt$SCC.Level.Two),]
PM25balt <- PM25balt[grep("Vehicle", PM25balt$SCC.Level.Two),] %>% group_by(year) %>%
summarize_each(funs(sum), Emissions)
baltplot <- ggplot(PM25balt, aes(year, Emissions))
baltplot + geom_line() + ggtitle("Emissions from motor vehicles in Baltimore, MD")
png(file = 'C:/Users/rwong/Documents/DSS/ExploratoryDataAnalysis/Proj2/plot5.png')
baltplot <- ggplot(PM25balt, aes(year, Emissions))
baltplot + geom_line() + ggtitle("Emissions from motor vehicles in Baltimore, MD")
dev.off()
PM25compare <- PM25merge[PM25merge$fips %in% c("24510","06037"),]
unique(PM25compare$fips)
PM25compare <- PM25compare[grep("Vehicle", PM25compare$SCC.Level.Two),] %>% group_by(fips, year) %>%
summarize_each(funs(sum), Emissions)
PM25compare
baltplot <- ggplot(PM25compare, aes(year, Emissions))
baltplot + geom_line(aes(color = fips)) + ggtitle("Emissions from motor vehicles in Baltimore, MD and Los Angeles, CA")
#Create PNG file using ggplot function
png(file = 'C:/Users/rwong/Documents/DSS/ExploratoryDataAnalysis/Proj2/plot5.png')
baltplot <- ggplot(PM25compare, aes(year, Emissions))
baltplot + geom_line(aes(color = fips)) + ggtitle("Emissions from motor vehicles in Baltimore, MD and Los Angeles, CA")
dev.off()
#Create PNG file using ggplot function
png(file = 'C:/Users/rwong/Documents/DSS/ExploratoryDataAnalysis/Proj2/plot6.png')
baltplot <- ggplot(PM25compare, aes(year, Emissions))
baltplot + geom_line(aes(color = fips)) + ggtitle("Emissions from motor vehicles in Baltimore, MD and Los Angeles, CA")
dev.off()
library(datasets)
?data
data(airquality)
pairs(airquality)
rm(list=ls())
library(data.table)
?set_wd
setwd
?setwd
setwd("C:/Users/rwong/Documents/DSS/ReproducibleResearch/RepData_PeerAssessment1")
activity <- read.csv("~/activity.csv")
setwd("C:/Users/rwong/Documents/DSS/ReproducibleResearch/RepData_PeerAssessment1")
getwd()
~/
activity <- read.csv("~/activity.csv")
